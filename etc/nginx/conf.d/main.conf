# Big thanks to the folks at Mozilla for this tool, used to generate parts of this config:
# https://mozilla.github.io/server-side-tls/ssl-config-generator/
#
# As of 2016/03/26, this config has an overall rating of A (SSL Labs):
# https://www.ssllabs.com/ssltest/analyze.html?d=clifton.io
#

server {
  listen 80;
  listen [::]:80;
  server_name clifton.io;

  # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
  return 301 https://$server_name$request_uri;
}

server {
  listen      80;
  listen 443  ssl;
  server_name www.clifton.io;
  return 301  $scheme://clifton.io$request_uri;
}

server {
  listen 443      ssl;
  listen [::]:443 ssl;
  server_name     clifton.io;
  access_log      /var/log/nginx/main-access.log;
  error_log       /var/log/nginx/main-error.log;
  root            /srv/clifton.io/;

  # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
  ssl_certificate     /srv/clifton-io-wildcard.chained.crt;
  ssl_certificate_key /srv/clifton-io-wildcard.key;
  ssl_session_timeout 1d;
  ssl_session_cache   shared:SSL:50m;
  #causes an issue :/
  #ssl_session_tickets off;

  # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
  ssl_dhparam /srv/dhparam.pem;

   # intermediate configuration. tweak to your needs.
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
  ssl_prefer_server_ciphers on;

  # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
  #add_header Strict-Transport-Security max-age=15768000;

  # OCSP Stapling ---
  # fetch OCSP records from URL in ssl_certificate and cache them
  ssl_stapling on;
  ssl_stapling_verify on;

  ## verify chain of trust of OCSP response using Root CA and Intermediate certs
  ssl_trusted_certificate /srv/gd_bundle-g2-g1.crt;

  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ =404;
  }

  location ~ \.php$ {
    include /etc/nginx/fastcgi.conf;
    include /etc/nginx/snippets/fastcgi-php.conf;
    fastcgi_pass unix:/var/run/php5-fpm.sock;
    fastcgi_param PATH_TRANSLATED $document_root$fastcgi_script_name;
  }
}

